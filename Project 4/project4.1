#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 3788 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"main.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"project2.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"project3.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 4 #"plot"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 2 #" ("
0 0 14 3 15 #"all-defined-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 10 #"math/array"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";Reti endgame"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"reti"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fixG"
0 0 24 3 2 #" ("
0 0 14 3 1 #"G"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pawn"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"))("
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 14 3 4 #"King"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 14 3 4 #"Pawn"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #"))("
0 0 14 3 1 #"P"
0 0 24 3 1 #" "
0 0 14 3 4 #"King"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";move"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 8 #"children"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"pdf18p10"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c8\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c8\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h8\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"g7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"g"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"e5\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"d6\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"h"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h4\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h3\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"j"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"f6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"e5\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"l"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"m"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"o"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h5\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h4\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"q"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"g7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"f6\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"t"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"u"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"e5\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"d6\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"1a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c8\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"2a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h4\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h3\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"u"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"3a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c8\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"1a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"4a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"g7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"f6\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"2a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"a2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"b2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"c2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"f6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"e5\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"d2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"f6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"e7\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"e2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c8\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"5a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"3a"
0 0 24 3 1 #" "
0 0 14 3 2 #"4a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"f2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"g2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b6\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"h2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h4\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h3\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"d2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"i2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h5\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h4\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"j2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"5a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"k2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"g7\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"f6\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 1 #" "
0 0 14 3 2 #"g2"
0 0 24 3 1 #" "
0 0 14 3 2 #"h2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"l2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"c7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"i2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"m2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h5\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h4\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"j2"
0 0 24 3 1 #" "
0 0 14 3 2 #"k2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"n2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"a6\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"b5\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"o2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"h8\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"g7\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 2 #"m2"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"node"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 2 #"o2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"print-tree"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"node-children"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"println"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-p1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"node-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"move-p2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"node-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 10 #"print-tree"
0 0 24 3 2 #" ("
0 0 14 3 13 #"node-children"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;;Depth first traversal of tree, to get ordered list of moves."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"moves2"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"node-children"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"node-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"node-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"flatten"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 6 #"moves2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"node-children"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"moves"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 8 #"pdf18p10"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"hc"
0 0 24 3 2 #" ("
0 0 14 3 13 #"node-children"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"append*"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 6 #"moves2"
0 0 24 3 1 #" "
0 0 14 3 2 #"hc"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 1 #" "
0 0 14 3 5 #"moves"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"print-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"print"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #") ("
0 0 14 3 7 #"move-p1"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 3 #") ("
0 0 14 3 7 #"move-p2"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";Move a piece along a trajectory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"move-t"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 47 #"\"Trajectory given to move-t doesn't have moves\""
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 37 #"\"move-t given a t for a different p?\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 7 #"P-reach"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 8 #"P-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";Given a zt return the new piece"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"movezt"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"tra"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"h"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"move-t"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"tra"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";know other player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"other-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";Apply a t object from a zone"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"applyzt"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"g-ps"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"p2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"movezt"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"G"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #" "
0 0 14 3 4 #"g-ps"
0 0 24 3 3 #") ("
0 0 14 3 5 #"G-dem"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #") ("
0 0 14 3 7 #"G-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";Given a list of zones, give back only those that include a player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"zones-with"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"is-player?"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 8 #"P-player"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"has-player?"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 10 #"is-player?"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 11 #"has-player?"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";given a zone, return only the t objects with a player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"zones-player"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"is-player?"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ("
0 0 14 3 8 #"P-player"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"zt"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"has-player?"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 10 #"is-player?"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 9 #"notempty?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"has-player?"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";All possible games for one player's possible moves"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"player-move-games"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 6 #";stuff"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Play game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"play-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 2 #"fp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 5 #"zones"
0 0 24 3 2 #" ("
0 0 14 3 4 #"zone"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:graph"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 9 #"withmoves"
0 0 24 3 2 #" ("
0 0 14 3 12 #"zones-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"fp"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"sp"
0 0 24 3 2 #" ("
0 0 14 3 12 #"other-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"fp"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"mains"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 12 #"zones-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"sp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"zones-with"
0 0 24 3 1 #" "
0 0 14 3 2 #"sp"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 9 #"withmoves"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 10 #"graph-game"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 1 #"z"
0 0 24 3 3 #") ("
0 0 14 3 7 #"applyzt"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"withmoves"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"first-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 5 #"zones"
0 0 24 3 2 #" ("
0 0 14 3 4 #"zone"
0 0 24 3 1 #" "
0 0 14 3 4 #"reti"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:graph"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 8 #"mainzone"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"zones"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"mainz"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 8 #"mainzone"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"g2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"applyzt"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 5 #"mainz"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"graph-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 10 #"graph-game"
0 0 24 3 1 #" "
0 0 14 3 2 #"g2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #";(zone g2)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";Graph a game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"graph-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 8 #"p1-color"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 8 #"p2-color"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 7 #"blocked"
0 0 24 3 2 #" ("
0 0 14 3 7 #"G-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 6 #"pieces"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"points"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 23 3 6 #"#:size"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 23 3 12 #"#:line-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:color"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 17 #"filter-for-player"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"P-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 6 #"player"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"P1p"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 17 #"filter-for-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"P2p"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 17 #"filter-for-player"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"d1?"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"d"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"r1"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 3 #"d1?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"distance"
0 0 24 3 2 #" ("
0 0 14 3 7 #"P-reach"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"G-dem"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 3 #") ("
0 0 14 3 7 #"G-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"m1"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 2 #"r1"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")]) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"P1pr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 3 #"P1p"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"P2pr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 3 #"P2p"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"plot"
0 0 24 3 2 #" ("
0 0 14 3 7 #"append*"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"make-board"
0 0 24 3 2 #" ("
0 0 14 3 5 #"G-dem"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 21 #";Graph blocked spaces"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"flatten"
0 0 24 3 1 #" "
0 0 14 3 7 #"blocked"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"points"
0 0 24 3 1 #" "
0 0 14 3 7 #"blocked"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:size"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 23 3 12 #"#:line-width"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:color"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 22 #";Graph player 1 pieces"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"pieces"
0 0 24 3 1 #" "
0 0 14 3 3 #"P1p"
0 0 24 3 1 #" "
0 0 14 3 8 #"p1-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 22 #";Graph player 2 pieces"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"pieces"
0 0 24 3 1 #" "
0 0 14 3 3 #"P2p"
0 0 24 3 1 #" "
0 0 14 3 8 #"p2-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 4 #"P1pr"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 3 #"tra"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"lines"
0 0 24 3 1 #" "
0 0 14 3 3 #"tra"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:width"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:alpha"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:color"
0 0 24 3 1 #" "
0 0 14 3 8 #"p1-color"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 4 #"P2pr"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 3 #"tra"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"lines"
0 0 24 3 1 #" "
0 0 14 3 3 #"tra"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:width"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:alpha"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 23 3 7 #"#:color"
0 0 24 3 1 #" "
0 0 14 3 8 #"p2-color"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 7 #"#:width"
0 0 24 3 1 #" "
0 0 14 3 12 #"g-board-size"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 8 #"#:height"
0 0 24 3 1 #" "
0 0 14 3 12 #"g-board-size"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 15 #";#:title \"Game\""
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 9 #"#:x-label"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 9 #"#:y-label"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";given a list, change value at position k to val"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"list-set2!"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 3 #"val"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 75
(
 #";;;Specific to our problem. If position k doens't exist, initialize "
 #"it to 0"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"list-set2!"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";;in the \"moves\" list, positions on the board are given in the for"
 #"m, a2. We need the form (list 1 2)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"convert-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 2 #"96"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 21 3 2 #"48"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;;;----useful state functions"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";Ever node has a parent, child sibling."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"snode"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 5 #"child"
0 0 24 3 1 #" "
0 0 14 3 7 #"sibling"
0 0 24 3 1 #" "
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 4 #"sign"
0 0 24 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(struct-copy state cstate [i 10])"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #"; to change one thing in a struct, (struct-copy `struct name` `struc"
 #"t instance` [`thing` `new value`])"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"print-state"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"println"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 5 #"\"end\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 3 #"\"d\""
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-d"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 3 #"\"m\""
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-m"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 3 #"\"v\""
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 6 #"\"from\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-from"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 4 #"\"to\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"state-to"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 8 #"\"parent\""
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 7 #"\"child\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-child"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 9 #"\"sibling\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"state-sibling"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 5 #"\"who\""
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-who"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 19 3 6 #"\"sign\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;;;-------Grammar functions------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BIG_NUMBER"
0 0 24 3 1 #" "
0 0 21 3 6 #"999999"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 6 #"pieces"
0 0 24 3 2 #" ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 10 #"filter-for"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"player"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"P-player"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 6 #"player"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 8 #"w-pieces"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 10 #"filter-for"
0 0 24 3 1 #" "
0 0 14 3 1 #"W"
0 0 24 3 2 #") "
0 0 14 3 6 #"pieces"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 8 #"b-pieces"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 10 #"filter-for"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 2 #") "
0 0 14 3 6 #"pieces"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 8 #"w-pieces"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 8 #"b-pieces"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LEAF"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"  "
0 0 14 3 10 #"BIG_NUMBER"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"b"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"TRANSITION-1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 2 #"ps"
0 0 24 3 2 #" ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"cmove"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"p#"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 12 #"convert-move"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-p2"
0 0 24 3 1 #" "
0 0 14 3 5 #"cmove"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"cp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #" "
0 0 14 3 2 #"p#"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"nps"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #" "
0 0 14 3 2 #"p#"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 7 #"P-reach"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 3 #") ("
0 0 14 3 8 #"P-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"convert-move"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-p1"
0 0 24 3 1 #" "
0 0 14 3 5 #"cmove"
0 0 24 3 6 #"))))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 2 #") "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 1 #" "
0 0 14 3 6 #"equal?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 2 #";("
0 0 17 3 7 #"println"
0 0 17 3 2 #" ("
0 0 17 3 10 #"graph-game"
0 0 17 3 2 #" ("
0 0 17 3 11 #"struct-copy"
0 0 17 3 1 #" "
0 0 17 3 1 #"G"
0 0 17 3 2 #" ("
0 0 17 3 11 #"state-board"
0 0 17 3 1 #" "
0 0 17 3 4 #"fvar"
0 0 17 3 3 #") ["
0 0 17 3 2 #"Ps"
0 0 17 3 1 #" "
0 0 17 3 7 #"nps])))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ["
0 0 14 3 2 #"Ps"
0 0 24 3 1 #" "
0 0 14 3 3 #"nps"
0 0 24 3 5 #"]))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"TRANSITION"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 2 #"ps"
0 0 24 3 2 #" ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"cmove"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"p#"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 12 #"convert-move"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-p1"
0 0 24 3 1 #" "
0 0 14 3 5 #"cmove"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 2 #"cp"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #" "
0 0 14 3 2 #"p#"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 3 #"nps"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 1 #" "
0 0 14 3 2 #"p#"
0 0 24 3 2 #" ("
0 0 14 3 1 #"P"
0 0 24 3 2 #" ("
0 0 14 3 7 #"P-reach"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 3 #") ("
0 0 14 3 8 #"P-player"
0 0 24 3 1 #" "
0 0 14 3 2 #"cp"
0 0 24 3 3 #") ("
0 0 14 3 12 #"convert-move"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-p2"
0 0 24 3 1 #" "
0 0 14 3 5 #"cmove"
0 0 24 3 6 #"))))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 41 #";FIX: make the single move a list of one."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"dmoves-global"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ["
0 0 14 3 2 #"Ps"
0 0 24 3 1 #" "
0 0 14 3 3 #"nps"
0 0 24 3 5 #"]))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"MINIMAX"
0 0 24 3 1 #" "
0 0 14 3 2 #"SN"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 2 #"SN"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"CUT"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 2 #"ps"
0 0 24 3 2 #" ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"p-pos"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"P-pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ps"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"member"
0 0 24 3 2 #" ("
0 0 14 3 12 #"convert-move"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-p1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"P-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"G-Ps"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 16 #"check-duplicates"
0 0 24 3 1 #" "
0 0 14 3 5 #"p-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;;; Global State"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;;;-------GRS--------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"Grs1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 11 #"start-state"
0 0 24 3 2 #" ("
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 17 3 4 #";end"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 17 3 2 #";d"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 4 #"reti"
0 0 24 3 3 #")) "
0 0 17 3 2 #";m"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"BIG_NUMBER"
0 0 24 3 2 #") "
0 0 17 3 2 #";v"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 5 #";from"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 3 #";to"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 7 #";parent"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 6 #";child"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 8 #";sibling"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 4 #";who"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 17 3 5 #";sign"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 4 #"reti"
0 0 24 3 4 #")]) "
0 0 17 3 12 #";board ;game"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"Grs2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-state"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"Grs2"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q2"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"or"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 11 #"move-player"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-player"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"moves-global"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-d"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"CUT"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q2"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 15 #";if q2, do Grs2"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 2 #"np"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 12 #"state-parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 69
(
 #";FIX: problems here due to non initialized, check if child(i) exists"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 3 #"nzc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-child"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-child"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 2 #"ns"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"nzc"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 13 #"state-sibling"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 8 #"list-ref"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-child"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 13 #"state-sibling"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 2 #"nc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"nzc"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 43 #";FIX: need to add a case here it initialize"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 2 #";("
0 0 17 3 9 #"list-set!"
0 0 17 3 2 #" ("
0 0 17 3 11 #"state-child"
0 0 17 3 1 #" "
0 0 17 3 4 #"fvar"
0 0 17 3 2 #") "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 2 #"0)"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 11 #"state-child"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-child"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 6 #"nboard"
0 0 24 3 2 #" ("
0 0 14 3 10 #"TRANSITION"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 2 #"nm"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-m"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 2 #"nv"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 10 #"BIG_NUMBER"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"nwho"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-who"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 5 #"nfrom"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-from"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 3 #"nto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 2 #" ("
0 0 14 3 8 #"state-to"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #") ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 6 #"nstate"
0 0 24 3 2 #" ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 2 #"np"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 5 #"child"
0 0 24 3 1 #" "
0 0 14 3 2 #"nc"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 7 #"sibling"
0 0 24 3 1 #" "
0 0 14 3 2 #"ns"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 1 #"d"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-d"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 4 #"sign"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 6 #"nboard"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 2 #"nm"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"nv"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 3 #"who"
0 0 24 3 1 #" "
0 0 14 3 4 #"nwho"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 5 #"nfrom"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ["
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"nto"
0 0 24 3 4 #"])])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"beg"
0 0 15 3 2 #"in"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"println"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"Grammar 2 with: i=\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"print-state"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"println"
0 0 24 3 2 #" ("
0 0 14 3 10 #"graph-game"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 11 #"let*-values"
0 0 24 3 4 #" ([("
0 0 14 3 3 #"pis"
0 0 24 3 1 #" "
0 0 14 3 6 #"cstate"
0 0 24 3 3 #") ("
0 0 14 3 4 #"Grs2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 14 3 6 #"nstate"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 4 #"pis2"
0 0 24 3 1 #" "
0 0 14 3 7 #"cstate2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"Grs2"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 6 #"cstate"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"pis"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"state-end"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #")) "
0 0 14 3 4 #"pis2"
0 0 24 3 2 #") "
0 0 14 3 7 #"cstate2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 13 #";else do Grs3"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"Grs3"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"Grs3"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Q3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"println"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"Grammar 3 with: i=\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"print-state"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"println"
0 0 24 3 2 #" ("
0 0 14 3 10 #"graph-game"
0 0 24 3 2 #" ("
0 0 14 3 11 #"state-board"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 7 #"dnzero?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-d"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 2 #"nd"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"dnzero?"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-d"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 7 #"state-d"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 5 #"nsign"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"dnzero?"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 2 #"pi"
0 0 24 3 2 #" ("
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 2 #"vs"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 2 #"ms"
0 0 24 3 2 #" ("
0 0 14 3 7 #"state-m"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 7 #"leafvmi"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LEAF"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"ms"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 3 #"pnv"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 1 #" "
0 0 17 3 10 #";list of v"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 14 3 2 #"pi"
0 0 24 3 1 #" "
0 0 17 3 26 #";specfici v we are chaning"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 17 3 10 #";new value"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 7 #"MINIMAX"
0 0 24 3 2 #" ("
0 0 14 3 10 #"state-sign"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"vs"
0 0 24 3 1 #" "
0 0 14 3 2 #"pi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 7 #"leafvmi"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 2 #"nv"
0 0 24 3 2 #" ("
0 0 14 3 9 #"list-set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"pnv"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 7 #"leafvmi"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 6 #"nboard"
0 0 24 3 2 #" ("
0 0 14 3 12 #"TRANSITION-1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 55 #";return that there is no pi for this, and updated state"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"fvar"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 2 #"nd"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 4 #"sign"
0 0 24 3 1 #" "
0 0 14 3 5 #"nsign"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"nv"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 5 #"board"
0 0 24 3 1 #" "
0 0 14 3 6 #"nboard"
0 0 24 3 6 #"])))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0           0
